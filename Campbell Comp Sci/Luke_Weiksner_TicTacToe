'''
Name: Luke Weiksner
Description: A tic tac toe game between two real users(player vs player)
Bugs: None
Features: None
Sources: Stack Overflow, w3 schools, python, geeksforgeeks, Mr. Campbell
Log: 1.0 initial release
'''

player_move_counter = 0

while True:
    question = str.lower(input("Do you want to Play Tic,Tac,Toe? "))            #asking if the user would like to play Tic Tac Toe
    if question == "no":                                                        #if user answers no
        exit()                                                                  #then code will stop
    elif question == "yes":                                                     #if user answer with yes
        print("Welcome to Tic Tac Toe")
        while True:
            question_2 = str.upper(input("Would player 1 like to be X or O? "))
            #storing the player 1 and player 2 either X or O depending on whether player 1 would like to be X or O
            if question_2 == 'X':
                player_1 ='X'
                player_2 = 'O'
                print(f"player 1 is {player_1} and player 2 is {player_2}")
                break
            elif question_2 == 'O':
                player_1 = 'O'
                player_2 = 'X'
                print(f"player 1 is {player_1} and player 2 is {player_2}")
                break
            else: 
                print("Please enter X or O")
        break
    else:
        print("Please enter with yes or no")
    

#making the board
board = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]]

def print_board():
    """
    Makes the board as a 2d array
    
    Args:
        board(array): An array of the board
    Returns:
        Returns the box
    """
    for row in board:                       #for all the rows in the board
        for col in range(len(row)):         #for the columns in the range of the number of the rows
            print(row[col],end = " ")       #printing the row for each column
        print("")

def player_move(player, move):
    """
    Takes in the player and the move of the player and replace the move with X or O
    
    Args:
        player: who the player is(X or O) as a str
        move: what the player choose as a number
    
    Returns:
        Putting the player(X or O) on the board for the move they choose 
    """
    #seeing what the move is and assigning it to a coordinte and replacing it with the user(X or O)    
    if move == 1 and board[0][0] == 1:          
        board[0][0] = player                    
    elif move == 2 and board[0][1] == 2:
        board[0][1] = player
    elif move == 3 and board[0][2] == 3:
        board[0][2] = player
    elif move == 4 and board[1][0] == 4:
        board[1][0] = player
    elif move == 5 and board[1][1] == 5:
        board[1][1] = player
    elif move == 6 and board[1][2] == 6:
        board[1][2] = player
    elif move == 7 and board[2][0] == 7:
        board[2][0] = player
    elif move == 8 and board[2][1] == 8:
        board[2][1] = player
    elif move == 9 and board[2][2] == 9:
        board[2][2] = player
    #checking if the move is not equal to any of the elif statements and asking the user again if the move is not avaliable
    else:   
        print('MOVE NOT AVALIABLE')
        player_move_redo = int(input(f"{player}, please select another spot "))
        player_move(player, player_move_redo)
    
def check_win(board,player):
    """
    Checking the win of a player using coordinates
    
    Args: 
        board: An array of the current TicTacToe Board
        player: who the player is (X or 0) as a str
    
    Returns:
        It returns the winner if their is a winner
    """
    #checking for horizontal(row) win
    if board[0][0] == board[0][1] == board[0][2]:
        print(f"{player} wins! Congratulations")
        exit()
    elif board[1][0] == board[1][1] == board[1][2]:
        print(f"{player} wins! Congratulations") 
        exit()
    elif board[2][0] == board[2][1] == board[2][2]:
        print(f"{player} wins! Congratulations")
        exit()
    #checking for vertical(column) win
    elif board[0][0] == board[1][0] == board[2][0]:
        print(f"{player} wins! Congratulations")
        exit()
    elif board[0][1] == board[1][1] == board[2][1]:
        print(f"{player} wins! Congratulations")
        exit()
    elif board[0][2] == board[1][2] == board[2][2]:
        print(f"{player} wins! Congratulations")
        exit()
    #checking for Diagonal Win
    elif board[0][0] == board[1][1] == board[2][2]:
        print(f"{player} wins! Congratulations")
        exit()
    elif board[0][2] == board[1][1] == board[2][0]:
        print(f"{player} wins! Congratulations")
        exit()
print_board()

while True:
    #if the player move counter is less than or equal to 8 than ask them for the space and change it to an int and putting it into functions
    if player_move_counter <= 8:
        while True:
            try:                                                                        
                player_1_move = int(input(f"Player 1, {player_1}, what space would you like to move to? "))
                player_move(player_1, player_1_move)
                player_move_counter += 1
                print_board()
                check_win(board, player_1)
                break 
            except ValueError:
                print("Enter a valid number")

    
    #if the player move counter is less than or equal to 8 than ask them for the space and change it to an int and putting it into functions
    if player_move_counter <= 8:
        while True:
            try:
                player_2_move = int(input(f"Player 2, {player_2},  what space would you like to move to?")) 
                player_move(player_2, player_2_move)
                player_move_counter += 1
                print_board()
                check_win(board, player_2)
                break
            except ValueError:
                print("Enter a valid number")
    #if the player move counter is greater than or equal than 9 the code will end    
    elif player_move_counter >= 9:
        print("board is now full, you tied, GAME OVER") 
        exit()
